[{"C:\\course\\test-task-project\\test-project\\src\\components\\app\\App.js":"1","C:\\course\\test-task-project\\test-project\\src\\index.js":"2","C:\\course\\test-task-project\\test-project\\src\\redux\\actions\\actions.js":"3","C:\\course\\test-task-project\\test-project\\src\\redux\\store.js":"4","C:\\course\\test-task-project\\test-project\\src\\redux\\reducers\\index.js":"5","C:\\course\\test-task-project\\test-project\\src\\components\\cells\\Test.js":"6"},{"size":1502,"mtime":1606426281905,"results":"7","hashOfConfig":"8"},{"size":404,"mtime":1606413993460,"results":"9","hashOfConfig":"8"},{"size":383,"mtime":1606426302362,"results":"10","hashOfConfig":"8"},{"size":221,"mtime":1606426140827,"results":"11","hashOfConfig":"8"},{"size":1364,"mtime":1606426077894,"results":"12","hashOfConfig":"8"},{"size":1724,"mtime":1606413633489,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dknr99",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"C:\\course\\test-task-project\\test-project\\src\\components\\app\\App.js",[],"C:\\course\\test-task-project\\test-project\\src\\index.js",[],"C:\\course\\test-task-project\\test-project\\src\\redux\\actions\\actions.js",[],"C:\\course\\test-task-project\\test-project\\src\\redux\\store.js",[],"C:\\course\\test-task-project\\test-project\\src\\redux\\reducers\\index.js",[],"C:\\course\\test-task-project\\test-project\\src\\components\\cells\\Test.js",["27"],"import React from \"react\";\r\nimport \"./Cells.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nconst shortid = require(\"shortid\");\r\n\r\nconst int = function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n\r\nclass Test extends React.Component {\r\n  render() {\r\n    const { matrix, mean, total } = this.props.state;\r\n    const { onAddStr, onDelStr, onInc } = this.props;\r\n    console.log(matrix);\r\n    return (\r\n      <div className=\"main-block\">\r\n        <ul className=\"matrix\">\r\n          {matrix.map((groupElem) => {\r\n            return groupElem.map((elem) => {\r\n              return (\r\n                <li\r\n                  key={shortid()}\r\n                  className=\"cell\"\r\n                  onClick={onInc}\r\n                  id={elem.id}\r\n                >\r\n                  {elem.amount}\r\n                </li>\r\n              );\r\n            });\r\n          })}\r\n        </ul>\r\n\r\n        <span className=\"total\">Total:{total}</span>\r\n        <span className=\"mean\">Mean:{mean}</span>\r\n        <button className=\"add-btn\" onClick={onAddStr}>\r\n          add str\r\n        </button>\r\n        <button className=\"del-btn\" onClick={onDelStr}>\r\n          dellete str\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onInc: (e) => {\r\n    dispatch(actions.increment(e));\r\n  },\r\n  onAddStr: () => {\r\n    dispatch(actions.addStr());\r\n  },\r\n  onDelStr: (id) => {\r\n    dispatch(actions.delStr(id));\r\n  },\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Test);\r\n",{"ruleId":"28","severity":1,"message":"29","line":7,"column":7,"nodeType":"30","messageId":"31","endLine":7,"endColumn":10},"no-unused-vars","'int' is assigned a value but never used.","Identifier","unusedVar"]